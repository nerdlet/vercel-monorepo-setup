{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/TimelineEvent.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport config from \"@/promisetracker/config\";\n\nfunction Event({\n  color,\n  isOdd,\n  radius,\n  textColor,\n  title,\n  year\n}) {\n  const interval = config.promiseInterval;\n  const theme = useTheme();\n  const xposition = `${(year - interval[0]) * 100 / (interval[1] - interval[0])}%`;\n  const yposition = isOdd ? \"50\" : \"20\";\n  const textRef = useRef();\n  const {\n    0: textPosition,\n    1: setTextPosition\n  } = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  });\n  React.useEffect(() => {\n    if (textRef.current) {\n      setTextPosition(textRef.current.getBBox());\n    }\n  }, [textRef]); //console.log(title)\n\n  return __jsx(React.Fragment, null, __jsx(\"circle\", {\n    cx: xposition,\n    cy: \"70\",\n    r: radius,\n    stroke: \"#F7F7F7\",\n    strokeWidth: \"1\",\n    fill: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(\"rect\", {\n    width: `${textPosition.width * 1.5}`,\n    height: `${textPosition.height * 2}`,\n    x: `${textPosition.x - textPosition.width * 1.5 / 6}`,\n    y: `${textPosition.y - textPosition.height / 2}`,\n    fill: color,\n    rx: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(\"text\", {\n    ref: textRef,\n    x: xposition,\n    y: yposition,\n    fill: textColor,\n    stroke: \"#202020\",\n    strokeWidth: \".1\",\n    fontFamily: theme.typography.h6.fontFamily,\n    fontSize: theme.typography.h6.fontSize,\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title === null || title === void 0 ? void 0 : title.toUpperCase()));\n}\n\nEvent.propTypes = {\n  color: PropTypes.string,\n  isOdd: PropTypes.number,\n  radius: PropTypes.string,\n  textColor: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired\n};\nEvent.defaultProps = {\n  radius: \"4\",\n  isOdd: false,\n  color: \"#fff\",\n  textColor: \"#202020\"\n};\nexport default Event;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/TimelineEvent.js"],"names":["React","useState","useRef","PropTypes","useTheme","config","Event","color","isOdd","radius","textColor","title","year","interval","promiseInterval","theme","xposition","yposition","textRef","textPosition","setTextPosition","x","y","width","height","useEffect","current","getBBox","typography","h6","fontFamily","fontSize","toUpperCase","propTypes","string","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport config from \"@/promisetracker/config\";\n\nfunction Event({ color, isOdd, radius, textColor, title, year }) {\n  const interval = config.promiseInterval;\n  const theme = useTheme();\n  const xposition = `${\n    ((year - interval[0]) * 100) / (interval[1] - interval[0])\n  }%`;\n  const yposition = isOdd ? \"50\" : \"20\";\n  const textRef = useRef();\n  const [textPosition, setTextPosition] = useState({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  });\n\n  React.useEffect(() => {\n    if (textRef.current) {\n      setTextPosition(textRef.current.getBBox());\n    }\n  }, [textRef]);\n\n\t//console.log(title)\n  return (\n    <>\n      <circle\n        cx={xposition}\n        cy=\"70\"\n        r={radius}\n        stroke=\"#F7F7F7\"\n        strokeWidth=\"1\"\n        fill={color}\n      />\n      <rect\n        width={`${textPosition.width * 1.5}`}\n        height={`${textPosition.height * 2}`}\n        x={`${textPosition.x - (textPosition.width * 1.5) / 6}`}\n        y={`${textPosition.y - textPosition.height / 2}`}\n        fill={color}\n        rx=\"8\"\n      />\n      <text\n        ref={textRef}\n        x={xposition}\n        y={yposition}\n        fill={textColor}\n        stroke=\"#202020\"\n        strokeWidth=\".1\"\n        fontFamily={theme.typography.h6.fontFamily}\n        fontSize={theme.typography.h6.fontSize}\n        fontWeight={600}\n      >\n        {title?.toUpperCase()}\n      </text>\n    </>\n  );\n}\n\nEvent.propTypes = {\n  color: PropTypes.string,\n  isOdd: PropTypes.number,\n  radius: PropTypes.string,\n  textColor: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n};\n\nEvent.defaultProps = {\n  radius: \"4\",\n  isOdd: false,\n  color: \"#fff\",\n  textColor: \"#202020\"\n};\nexport default Event;\n"]},"metadata":{},"sourceType":"module"}