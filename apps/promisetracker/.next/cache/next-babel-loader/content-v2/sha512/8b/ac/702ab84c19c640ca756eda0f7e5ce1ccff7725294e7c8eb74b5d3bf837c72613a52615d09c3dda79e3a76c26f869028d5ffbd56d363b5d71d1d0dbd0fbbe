{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/KeyPromises/KeyPromise.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { RichTypography } from \"@commons-ui/core\";\nimport CtAButton from \"@/promisetracker/components/CtAButton\";\nimport Button from \"@/promisetracker/components/Link/Button\";\nimport PromiseTimeline from \"@/promisetracker/components/PromiseTimeline\";\nimport useStyles from \"./useStyles\";\n\nfunction KeyPromise(_ref) {\n  _s();\n\n  var actionLabel = _ref.actionLabel,\n      description = _ref.description,\n      events = _ref.events,\n      href = _ref.href,\n      image = _ref.image,\n      date = _ref.date,\n      statusHistory = _ref.statusHistory,\n      status = _ref.status,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"actionLabel\", \"description\", \"events\", \"href\", \"image\", \"date\", \"statusHistory\", \"status\", \"title\"]);\n\n  var classes = useStyles(_objectSpread(_objectSpread({}, props), {}, {\n    status: status\n  }));\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  var titleVariant = isDesktop ? \"h2\" : \"h3\";\n  return __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"stretch\",\n    className: classes.keyPromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 5,\n    className: classes.keyPromiseMediaGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: classes.mediaContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: image,\n    alt: title,\n    className: classes.media,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    container: true,\n    direction: \"column\",\n    justify: \"space-between\",\n    alignContent: \"stretch\",\n    className: classes.keyPromiseDetailsGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(RichTypography, {\n    variant: titleVariant,\n    className: classes.keyPromiseTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, title), isDesktop && __jsx(RichTypography, {\n    variant: \"body2\",\n    className: classes.keyPromiseDescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, description)), actionLabel && __jsx(CtAButton, {\n    color: \"primary\",\n    component: Button,\n    as: href,\n    href: \"/promises/[...slug]\",\n    classes: {\n      root: classes.keyPromiseCta,\n      button: classes.keyPromiseCtaButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, actionLabel)), __jsx(Grid, {\n    className: classes.timelineGrid,\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(PromiseTimeline, {\n    events: events,\n    date: date,\n    status: status,\n    statusHistory: statusHistory,\n    classes: {\n      root: classes.timeline\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(KeyPromise, \"Hu6wY2lD9RXVdiUkdVrs/git5qs=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = KeyPromise;\nKeyPromise.propTypes = {\n  actionLabel: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  href: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  statusHistory: PropTypes.arrayOf(PropTypes.shape({})),\n  status: PropTypes.shape({}),\n  title: PropTypes.string.isRequired\n};\nKeyPromise.defaultProps = {\n  actionLabel: undefined,\n  description: undefined,\n  events: undefined,\n  statusHistory: undefined,\n  status: undefined\n};\nexport default KeyPromise;\n\nvar _c;\n\n$RefreshReg$(_c, \"KeyPromise\");","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/KeyPromises/KeyPromise.js"],"names":["React","PropTypes","Grid","useMediaQuery","useTheme","RichTypography","CtAButton","Button","PromiseTimeline","useStyles","KeyPromise","actionLabel","description","events","href","image","date","statusHistory","status","title","props","classes","theme","isDesktop","breakpoints","up","titleVariant","keyPromise","keyPromiseMediaGrid","mediaContainer","media","keyPromiseDetailsGrid","keyPromiseTitle","keyPromiseDescription","root","keyPromiseCta","button","keyPromiseCtaButton","timelineGrid","timeline","propTypes","string","isRequired","arrayOf","shape","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport { RichTypography } from \"@commons-ui/core\";\n\nimport CtAButton from \"@/promisetracker/components/CtAButton\";\nimport Button from \"@/promisetracker/components/Link/Button\";\nimport PromiseTimeline from \"@/promisetracker/components/PromiseTimeline\";\n\nimport useStyles from \"./useStyles\";\n\nfunction KeyPromise({\n  actionLabel,\n  description,\n  events,\n  href,\n  image,\n  date,\n  statusHistory,\n  status,\n  title,\n  ...props\n}) {\n  const classes = useStyles({ ...props, status });\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const titleVariant = isDesktop ? \"h2\" : \"h3\";\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      alignItems=\"stretch\"\n      className={classes.keyPromise}\n    >\n      <Grid item xs={12} lg={5} className={classes.keyPromiseMediaGrid}>\n        <div className={classes.mediaContainer}>\n          <img src={image} alt={title} className={classes.media} />\n        </div>\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        lg={6}\n        container\n        direction=\"column\"\n        justify=\"space-between\"\n        alignContent=\"stretch\"\n        className={classes.keyPromiseDetailsGrid}\n      >\n        <Grid item>\n          <RichTypography\n            variant={titleVariant}\n            className={classes.keyPromiseTitle}\n          >\n            {title}\n          </RichTypography>\n          {isDesktop && (\n            <RichTypography\n              variant=\"body2\"\n              className={classes.keyPromiseDescription}\n            >\n              {description}\n            </RichTypography>\n          )}\n        </Grid>\n        {actionLabel && (\n          <CtAButton\n            color=\"primary\"\n            component={Button}\n            as={href}\n            href=\"/promises/[...slug]\"\n            classes={{\n              root: classes.keyPromiseCta,\n              button: classes.keyPromiseCtaButton,\n            }}\n          >\n            {actionLabel}\n          </CtAButton>\n        )}\n      </Grid>\n      <Grid className={classes.timelineGrid} item xs={12}>\n        <PromiseTimeline\n          events={events}\n          date={date}\n          status={status}\n          statusHistory={statusHistory}\n          classes={{ root: classes.timeline }}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nKeyPromise.propTypes = {\n  actionLabel: PropTypes.string,\n  date: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  href: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  statusHistory: PropTypes.arrayOf(PropTypes.shape({})),\n  status: PropTypes.shape({}),\n  title: PropTypes.string.isRequired,\n};\n\nKeyPromise.defaultProps = {\n  actionLabel: undefined,\n  description: undefined,\n  events: undefined,\n  statusHistory: undefined,\n  status: undefined,\n};\n\nexport default KeyPromise;\n"]},"metadata":{},"sourceType":"module"}