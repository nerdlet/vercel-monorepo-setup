{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Hero/Profile/index.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport profilePic from \"../../../assets/hero-sonko.png\";\nconst useStyles = makeStyles(({\n  breakpoints,\n  palette,\n  typography\n}) => ({\n  root: {\n    paddingTop: typography.pxToRem(20),\n    [breakpoints.up(\"lg\")]: {\n      paddingTop: 0,\n      marginLeft: typography.pxToRem(-55)\n    }\n  },\n  caption: {\n    color: \"#20202059\"\n  },\n  details: {\n    paddingLeft: typography.pxToRem(10),\n    [breakpoints.up(\"lg\")]: {\n      paddingLeft: 0\n    }\n  },\n  img: {\n    maxWidth: typography.pxToRem(149),\n    objectFit: \"cover\",\n    width: typography.pxToRem(149),\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(350),\n      width: typography.pxToRem(350)\n    }\n  },\n  title: {\n    color: palette.primary.main,\n    textTransform: \"uppercase\"\n  },\n  typography: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction Profile(_ref) {\n  let {\n    title,\n    name,\n    date,\n    dateLabel\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"title\", \"name\", \"date\", \"dateLabel\"]);\n\n  const classes = useStyles(props);\n  return __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignItems: \"center\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: profilePic,\n    alt: name,\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 6,\n    lg: 12,\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, title), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.caption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, dateLabel, \" \", date)));\n}\n\nProfile.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  dateLabel: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Hero/Profile/index.js"],"names":["React","PropTypes","makeStyles","Grid","Typography","profilePic","useStyles","breakpoints","palette","typography","root","paddingTop","pxToRem","up","marginLeft","caption","color","details","paddingLeft","img","maxWidth","objectFit","width","title","primary","main","textTransform","textAlign","Profile","name","date","dateLabel","props","classes","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography } from \"@material-ui/core\";\n\nimport profilePic from \"@/promisetracker/assets/hero-sonko.png\";\n\nconst useStyles = makeStyles(({ breakpoints, palette, typography }) => ({\n  root: {\n    paddingTop: typography.pxToRem(20),\n    [breakpoints.up(\"lg\")]: {\n      paddingTop: 0,\n      marginLeft: typography.pxToRem(-55),\n    },\n  },\n  caption: {\n    color: \"#20202059\",\n  },\n  details: {\n    paddingLeft: typography.pxToRem(10),\n    [breakpoints.up(\"lg\")]: {\n      paddingLeft: 0,\n    },\n  },\n  img: {\n    maxWidth: typography.pxToRem(149),\n    objectFit: \"cover\",\n    width: typography.pxToRem(149),\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(350),\n      width: typography.pxToRem(350),\n    },\n  },\n  title: {\n    color: palette.primary.main,\n    textTransform: \"uppercase\",\n  },\n  typography: {\n    textAlign: \"center\",\n  },\n}));\n\nfunction Profile({ title, name, date, dateLabel, ...props }) {\n  const classes = useStyles(props);\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      alignItems=\"center\"\n      className={classes.root}\n    >\n      <Grid item lg={12}>\n        <img src={profilePic} alt={name} className={classes.img} />\n      </Grid>\n      <Grid item xs={6} lg={12} className={classes.details}>\n        <Typography variant=\"h5\" className={classes.title}>\n          {title}\n        </Typography>\n        <Typography variant=\"h6\" className={classes.caption}>\n          {dateLabel} {date}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nProfile.propTypes = {\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  dateLabel: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}