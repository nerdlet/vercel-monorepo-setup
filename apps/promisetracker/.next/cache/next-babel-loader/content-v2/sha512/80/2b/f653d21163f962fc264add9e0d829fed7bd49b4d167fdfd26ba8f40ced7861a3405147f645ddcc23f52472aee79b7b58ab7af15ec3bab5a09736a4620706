{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/ActNow/index.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Section } from \"@commons-ui/core\";\nimport CtAButton from \"../CtAButton\";\nimport actNowImg from \"../../assets/illo-actNow@2x.png\";\nconst useStyles = makeStyles(({\n  breakpoints,\n  typography\n}) => ({\n  section: {},\n  root: {\n    backgroundColor: \"#ebebeb\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: typography.pxToRem(53),\n    paddingTop: typography.pxToRem(45)\n  },\n  title: {\n    padding: 0,\n    textAlign: \"left\",\n    textTransform: \"capitalize\"\n  },\n  content: {\n    alignItems: \"center\",\n    flexDirection: \"column-reverse\",\n    justifyContent: \"center\",\n    [breakpoints.up(\"lg\")]: {\n      alignItems: \"stretch\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    }\n  },\n  cta: {\n    marginBottom: 0,\n    [breakpoints.up(\"lg\")]: {\n      justifyContent: \"left\",\n      padding: 0\n    }\n  },\n  ctaButton: {\n    minWidth: typography.pxToRem(138),\n    [breakpoints.up(\"lg\")]: {\n      minWidth: typography.pxToRem(158)\n    }\n  },\n  description: {\n    padding: \"1rem 0rem 1.5rem 0rem\",\n    textAlign: \"left\",\n    [breakpoints.up(\"lg\")]: {\n      lineHeight: \"1.875rem\"\n    }\n  },\n  image: {\n    maxWidth: typography.pxToRem(314),\n    minWidth: typography.pxToRem(314),\n    objectFit: \"cover\",\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(484),\n      minWidth: typography.pxToRem(484)\n    }\n  },\n  textContainer: {\n    marginTop: typography.pxToRem(19),\n    [breakpoints.up(\"lg\")]: {\n      marginTop: 0\n    }\n  }\n}));\n\nfunction ActNow(_ref) {\n  let {\n    actionLabel,\n    description,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"actionLabel\", \"description\", \"title\"]);\n\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const descriptionVariant = useMediaQuery(theme.breakpoints.up(\"lg\")) ? \"body1\" : \"body2\";\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    classes: {\n      root: classes.section\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    container: true,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: classes.textContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    variant: \"h1\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, title), __jsx(Typography, {\n    variant: descriptionVariant,\n    className: classes.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, description), __jsx(CtAButton, {\n    classes: {\n      root: classes.cta,\n      button: classes.ctaButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, actionLabel))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: actNowImg,\n    alt: \"Act Now\",\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })))));\n}\n\nActNow.propTypes = {\n  actionLabel: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string\n};\nActNow.defaultProps = {\n  actionLabel: undefined,\n  description: undefined,\n  title: undefined\n};\nexport default ActNow;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/ActNow/index.js"],"names":["React","PropTypes","Grid","Typography","useMediaQuery","makeStyles","useTheme","Section","CtAButton","actNowImg","useStyles","breakpoints","typography","section","root","backgroundColor","width","display","alignItems","justifyContent","paddingBottom","pxToRem","paddingTop","title","padding","textAlign","textTransform","content","flexDirection","up","cta","marginBottom","ctaButton","minWidth","description","lineHeight","image","maxWidth","objectFit","textContainer","marginTop","ActNow","actionLabel","props","classes","theme","descriptionVariant","button","propTypes","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Grid, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport { Section } from \"@commons-ui/core\";\n\nimport CtAButton from \"@/promisetracker/components/CtAButton\";\nimport actNowImg from \"@/promisetracker/assets/illo-actNow@2x.png\";\n\nconst useStyles = makeStyles(({ breakpoints, typography }) => ({\n  section: {},\n  root: {\n    backgroundColor: \"#ebebeb\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: typography.pxToRem(53),\n    paddingTop: typography.pxToRem(45),\n  },\n  title: {\n    padding: 0,\n    textAlign: \"left\",\n    textTransform: \"capitalize\",\n  },\n  content: {\n    alignItems: \"center\",\n    flexDirection: \"column-reverse\",\n    justifyContent: \"center\",\n    [breakpoints.up(\"lg\")]: {\n      alignItems: \"stretch\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n    },\n  },\n  cta: {\n    marginBottom: 0,\n    [breakpoints.up(\"lg\")]: {\n      justifyContent: \"left\",\n      padding: 0,\n    },\n  },\n  ctaButton: {\n    minWidth: typography.pxToRem(138),\n    [breakpoints.up(\"lg\")]: {\n      minWidth: typography.pxToRem(158),\n    },\n  },\n  description: {\n    padding: \"1rem 0rem 1.5rem 0rem\",\n    textAlign: \"left\",\n    [breakpoints.up(\"lg\")]: {\n      lineHeight: \"1.875rem\",\n    },\n  },\n  image: {\n    maxWidth: typography.pxToRem(314),\n    minWidth: typography.pxToRem(314),\n    objectFit: \"cover\",\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(484),\n      minWidth: typography.pxToRem(484),\n    },\n  },\n  textContainer: {\n    marginTop: typography.pxToRem(19),\n    [breakpoints.up(\"lg\")]: {\n      marginTop: 0,\n    },\n  },\n}));\n\nfunction ActNow({ actionLabel, description, title, ...props }) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const descriptionVariant = useMediaQuery(theme.breakpoints.up(\"lg\"))\n    ? \"body1\"\n    : \"body2\";\n\n  return (\n    <div className={classes.root}>\n      <Section classes={{ root: classes.section }}>\n        <Grid container className={classes.content}>\n          <Grid item xs={12} lg={6} container alignItems=\"center\">\n            <div className={classes.textContainer}>\n              <Typography variant=\"h1\" className={classes.title}>\n                {title}\n              </Typography>\n              <Typography\n                variant={descriptionVariant}\n                className={classes.description}\n              >\n                {description}\n              </Typography>\n              <CtAButton\n                classes={{\n                  root: classes.cta,\n                  button: classes.ctaButton,\n                }}\n              >\n                {actionLabel}\n              </CtAButton>\n            </div>\n          </Grid>\n          <Grid item xs={12} lg={5}>\n            <img src={actNowImg} alt=\"Act Now\" className={classes.image} />\n          </Grid>\n        </Grid>\n      </Section>\n    </div>\n  );\n}\nActNow.propTypes = {\n  actionLabel: PropTypes.string,\n  description: PropTypes.string,\n  title: PropTypes.string,\n};\n\nActNow.defaultProps = {\n  actionLabel: undefined,\n  description: undefined,\n  title: undefined,\n};\n\nexport default ActNow;\n"]},"metadata":{},"sourceType":"module"}