{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Navigation/DesktopNavigation/NavigationButton.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, ClickAwayListener, Collapse, Popper, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(({\n  spacing,\n  palette,\n  typography\n}) => ({\n  root: {\n    display: \"flex\"\n  },\n  paper: {\n    marginRight: spacing(2)\n  },\n  popper: {\n    marginTop: typography.pxToRem(34),\n    width: \"100%\",\n    zIndex: 9999\n  },\n  button: {\n    border: 0,\n    color: palette.primary.main,\n    padding: \"0.8rem \",\n    textTransform: \"uppercase\",\n    fontFamily: typography.fontFamily,\n    letterSpacing: \"0.56px\",\n    fontWeight: 600,\n    fontSize: typography.pxToRem(14),\n    \"&:hover\": {\n      border: 0,\n      backgroundColor: palette.secondary.light\n    }\n  },\n  currentButton: {\n    background: palette.primary.dark,\n    borderRadius: 0,\n    padding: \"0.8rem \",\n    textTransform: \"uppercase\",\n    fontFamily: typography.fontFamily,\n    letterSpacing: \"0.56px\",\n    fontWeight: 600,\n    fontSize: typography.pxToRem(14),\n    \"&:hover\": {\n      border: 0,\n      background: palette.primary.dark,\n      color: palette.background.default\n    }\n  }\n}));\n\nfunction NavigationButton(_ref) {\n  let {\n    active,\n    anchorEl,\n    button: buttonProp,\n    children,\n    open: openProp,\n    onClose,\n    popperProps,\n    size,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"active\", \"anchorEl\", \"button\", \"children\", \"open\", \"onClose\", \"popperProps\", \"size\", \"title\"]);\n\n  const classes = useStyles(props);\n  const buttonRef = useRef();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(openProp);\n\n  const handleToggleOpen = () => {\n    setOpen(prevOpen => !prevOpen);\n  };\n\n  const handleClose = e => {\n    if (buttonRef.current && buttonRef.current.contains(e.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const button = buttonProp || __jsx(Button, _extends({\n    onClick: handleToggleOpen,\n    disableFocusRipple: true,\n    disableRipple: true,\n    size: size\n  }, props, {\n    variant: active || open ? \"contained\" : null,\n    ref: buttonRef,\n    className: open || active ? classes.currentButton : classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }), title);\n\n  return __jsx(React.Fragment, null, button, __jsx(Popper, _extends({\n    open: !active && open,\n    anchorEl: anchorEl || buttonRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true\n  }, popperProps, {\n    className: classes.popper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), ({\n    TransitionProps\n  }) => __jsx(ClickAwayListener, {\n    onClickAway: onClose || handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, __jsx(Collapse, _extends({}, TransitionProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, children)))));\n}\n\nNavigationButton.propTypes = {\n  active: PropTypes.bool,\n  anchorEl: PropTypes.shape({}),\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  popperProps: PropTypes.shape({}),\n  button: PropTypes.shape({}),\n  children: PropTypes.shape({}),\n  title: PropTypes.string,\n  size: PropTypes.string\n};\nNavigationButton.defaultProps = {\n  active: false,\n  anchorEl: undefined,\n  onClose: undefined,\n  open: false,\n  popperProps: undefined,\n  button: undefined,\n  title: undefined,\n  size: undefined,\n  children: undefined\n};\nexport default NavigationButton;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Navigation/DesktopNavigation/NavigationButton.js"],"names":["React","useRef","useState","PropTypes","Box","ClickAwayListener","Collapse","Popper","Button","makeStyles","useStyles","spacing","palette","typography","root","display","paper","marginRight","popper","marginTop","pxToRem","width","zIndex","button","border","color","primary","main","padding","textTransform","fontFamily","letterSpacing","fontWeight","fontSize","backgroundColor","secondary","light","currentButton","background","dark","borderRadius","default","NavigationButton","active","anchorEl","buttonProp","children","open","openProp","onClose","popperProps","size","title","props","classes","buttonRef","setOpen","handleToggleOpen","prevOpen","handleClose","e","current","contains","target","undefined","TransitionProps","propTypes","bool","shape","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Box,\n  ClickAwayListener,\n  Collapse,\n  Popper,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(({ spacing, palette, typography }) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    marginRight: spacing(2),\n  },\n  popper: {\n    marginTop: typography.pxToRem(34),\n    width: \"100%\",\n    zIndex: 9999,\n  },\n  button: {\n    border: 0,\n    color: palette.primary.main,\n    padding: \"0.8rem \",\n    textTransform: \"uppercase\",\n    fontFamily: typography.fontFamily,\n    letterSpacing: \"0.56px\",\n    fontWeight: 600,\n    fontSize: typography.pxToRem(14),\n    \"&:hover\": {\n      border: 0,\n      backgroundColor: palette.secondary.light,\n    },\n  },\n  currentButton: {\n    background: palette.primary.dark,\n    borderRadius: 0,\n    padding: \"0.8rem \",\n    textTransform: \"uppercase\",\n    fontFamily: typography.fontFamily,\n    letterSpacing: \"0.56px\",\n    fontWeight: 600,\n    fontSize: typography.pxToRem(14),\n    \"&:hover\": {\n      border: 0,\n      background: palette.primary.dark,\n      color: palette.background.default,\n    },\n  },\n}));\n\nfunction NavigationButton({\n  active,\n  anchorEl,\n  button: buttonProp,\n  children,\n  open: openProp,\n  onClose,\n  popperProps,\n  size,\n  title,\n  ...props\n}) {\n  const classes = useStyles(props);\n  const buttonRef = useRef();\n  const [open, setOpen] = useState(openProp);\n  const handleToggleOpen = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n  const handleClose = (e) => {\n    if (buttonRef.current && buttonRef.current.contains(e.target)) {\n      return;\n    }\n    setOpen(false);\n  };\n  const button = buttonProp || (\n    <Button\n      onClick={handleToggleOpen}\n      disableFocusRipple\n      disableRipple\n      size={size}\n      {...props}\n      variant={active || open ? \"contained\" : null}\n      ref={buttonRef}\n      className={open || active ? classes.currentButton : classes.button}\n    >\n      {title}\n    </Button>\n  );\n\n  return (\n    <>\n      {button}\n      <Popper\n        open={!active && open}\n        anchorEl={anchorEl || buttonRef.current}\n        role={undefined}\n        transition\n        disablePortal\n        {...popperProps}\n        className={classes.popper}\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener onClickAway={onClose || handleClose}>\n            <Collapse {...TransitionProps}>\n              {/* We need component that can forwardRef here */}\n              <Box>{children}</Box>\n            </Collapse>\n          </ClickAwayListener>\n        )}\n      </Popper>\n    </>\n  );\n}\n\nNavigationButton.propTypes = {\n  active: PropTypes.bool,\n  anchorEl: PropTypes.shape({}),\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  popperProps: PropTypes.shape({}),\n  button: PropTypes.shape({}),\n  children: PropTypes.shape({}),\n  title: PropTypes.string,\n  size: PropTypes.string,\n};\n\nNavigationButton.defaultProps = {\n  active: false,\n  anchorEl: undefined,\n  onClose: undefined,\n  open: false,\n  popperProps: undefined,\n  button: undefined,\n  title: undefined,\n  size: undefined,\n  children: undefined,\n};\nexport default NavigationButton;\n"]},"metadata":{},"sourceType":"module"}