{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport config from \"../../config\";\nimport server from \"../server\";\n\nfunction i18n(site) {\n  var siteServer = server(site);\n  var api = {\n    get defaultLocale() {\n      return siteServer.defaultLocale;\n    },\n\n    get locales() {\n      return siteServer.locales;\n    },\n\n    language: function language(locale) {\n      return config.LANGUAGE_BY_LOCALE[locale] || locale;\n    },\n\n    /**\n     * .\n     * languageAlternates is not the best name in the world but\n     * (Next Seo)[https://github.com/garmeeh/next-seo#nextseo-options]\n     * uses it so we'll use it here as well.\n     */\n    languageAlternates: function languageAlternates() {\n      var asPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var url = siteServer.url;\n      var baseUrl = url.endsWith(\"/\") ? url.slice(0, -1) : url;\n      var pagePath = asPath.endsWith(\"/\") ? asPath.slice(0, -1) : asPath;\n      pagePath = pagePath.length && !pagePath.startsWith(\"/\") ? \"/\".concat(pagePath) : pagePath;\n      var alternatives = siteServer.locales.map(function (locale) {\n        return {\n          hrefLang: locale,\n          href: \"\".concat(baseUrl, \"/\").concat(locale).concat(pagePath)\n        };\n      });\n      alternatives.push({\n        hrefLang: \"x-default\",\n        href: \"\".concat(baseUrl).concat(pagePath)\n      });\n      return alternatives;\n    },\n    localizePaths: function localizePaths(unlocalizedPaths) {\n      var paths = [];\n      siteServer.locales.forEach(function (locale) {\n        unlocalizedPaths.forEach(function (path) {\n          return paths.push(_objectSpread(_objectSpread({}, path), {}, {\n            locale: locale\n          }));\n        });\n      });\n      return paths;\n    }\n  };\n  return api;\n}\n\nexport default i18n;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/lib/i18n/index.js"],"names":["config","server","i18n","site","siteServer","api","defaultLocale","locales","language","locale","LANGUAGE_BY_LOCALE","languageAlternates","asPath","url","baseUrl","endsWith","slice","pagePath","length","startsWith","alternatives","map","hrefLang","href","push","localizePaths","unlocalizedPaths","paths","forEach","path"],"mappings":";;;;;;AAAA,OAAOA,MAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB,MAAMC,UAAU,GAAGH,MAAM,CAACE,IAAD,CAAzB;AAEA,MAAME,GAAG,GAAG;AACV,QAAIC,aAAJ,GAAoB;AAClB,aAAOF,UAAU,CAACE,aAAlB;AACD,KAHS;;AAIV,QAAIC,OAAJ,GAAc;AACZ,aAAOH,UAAU,CAACG,OAAlB;AACD,KANS;;AAQVC,IAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,aAAYT,MAAM,CAACU,kBAAP,CAA0BD,MAA1B,KAAqCA,MAAjD;AAAA,KARA;;AAUV;AACJ;AACA;AACA;AACA;AACA;AACIE,IAAAA,kBAAkB,EAAE,8BAAiB;AAAA,UAAhBC,MAAgB,uEAAP,EAAO;AAAA,UAC3BC,GAD2B,GACnBT,UADmB,CAC3BS,GAD2B;AAEnC,UAAMC,OAAO,GAAGD,GAAG,CAACE,QAAJ,CAAa,GAAb,IAAoBF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAApB,GAAuCH,GAAvD;AACA,UAAII,QAAQ,GAAGL,MAAM,CAACG,QAAP,CAAgB,GAAhB,IAAuBH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAvB,GAA6CJ,MAA5D;AACAK,MAAAA,QAAQ,GACNA,QAAQ,CAACC,MAAT,IAAmB,CAACD,QAAQ,CAACE,UAAT,CAAoB,GAApB,CAApB,cACQF,QADR,IAEIA,QAHN;AAIA,UAAMG,YAAY,GAAGhB,UAAU,CAACG,OAAX,CAAmBc,GAAnB,CAAuB,UAACZ,MAAD;AAAA,eAAa;AACvDa,UAAAA,QAAQ,EAAEb,MAD6C;AAEvDc,UAAAA,IAAI,YAAKT,OAAL,cAAgBL,MAAhB,SAAyBQ,QAAzB;AAFmD,SAAb;AAAA,OAAvB,CAArB;AAIAG,MAAAA,YAAY,CAACI,IAAb,CAAkB;AAChBF,QAAAA,QAAQ,EAAE,WADM;AAEhBC,QAAAA,IAAI,YAAKT,OAAL,SAAeG,QAAf;AAFY,OAAlB;AAIA,aAAOG,YAAP;AACD,KAjCS;AAmCVK,IAAAA,aAAa,EAAE,uBAACC,gBAAD,EAAsB;AACnC,UAAMC,KAAK,GAAG,EAAd;AACAvB,MAAAA,UAAU,CAACG,OAAX,CAAmBqB,OAAnB,CAA2B,UAACnB,MAAD,EAAY;AACrCiB,QAAAA,gBAAgB,CAACE,OAAjB,CAAyB,UAACC,IAAD;AAAA,iBAAUF,KAAK,CAACH,IAAN,iCAAgBK,IAAhB;AAAsBpB,YAAAA,MAAM,EAANA;AAAtB,aAAV;AAAA,SAAzB;AACD,OAFD;AAGA,aAAOkB,KAAP;AACD;AAzCS,GAAZ;AA4CA,SAAOtB,GAAP;AACD;;AAED,eAAeH,IAAf","sourcesContent":["import config from \"@/promisetracker/config\";\nimport server from \"@/promisetracker/lib/server\";\n\nfunction i18n(site) {\n  const siteServer = server(site);\n\n  const api = {\n    get defaultLocale() {\n      return siteServer.defaultLocale;\n    },\n    get locales() {\n      return siteServer.locales;\n    },\n\n    language: (locale) => config.LANGUAGE_BY_LOCALE[locale] || locale,\n\n    /**\n     * .\n     * languageAlternates is not the best name in the world but\n     * (Next Seo)[https://github.com/garmeeh/next-seo#nextseo-options]\n     * uses it so we'll use it here as well.\n     */\n    languageAlternates: (asPath = \"\") => {\n      const { url } = siteServer;\n      const baseUrl = url.endsWith(\"/\") ? url.slice(0, -1) : url;\n      let pagePath = asPath.endsWith(\"/\") ? asPath.slice(0, -1) : asPath;\n      pagePath =\n        pagePath.length && !pagePath.startsWith(\"/\")\n          ? `/${pagePath}`\n          : pagePath;\n      const alternatives = siteServer.locales.map((locale) => ({\n        hrefLang: locale,\n        href: `${baseUrl}/${locale}${pagePath}`,\n      }));\n      alternatives.push({\n        hrefLang: \"x-default\",\n        href: `${baseUrl}${pagePath}`,\n      });\n      return alternatives;\n    },\n\n    localizePaths: (unlocalizedPaths) => {\n      const paths = [];\n      siteServer.locales.forEach((locale) => {\n        unlocalizedPaths.forEach((path) => paths.push({ ...path, locale }));\n      });\n      return paths;\n    },\n  };\n\n  return api;\n}\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}