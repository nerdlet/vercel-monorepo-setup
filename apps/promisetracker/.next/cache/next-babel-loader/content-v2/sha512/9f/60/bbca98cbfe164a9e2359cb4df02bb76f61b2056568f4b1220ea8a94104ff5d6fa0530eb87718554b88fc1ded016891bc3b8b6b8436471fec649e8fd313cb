{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport Labels from \"./Labels\";\nimport PromiseEvent from \"./PromiseEvent\";\nimport PromiseStatus from \"./PromiseStatus\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflow: \"visible\"\n  }\n}));\n\nfunction PromiseTimeline(_ref) {\n  let {\n    events,\n    date,\n    status,\n    statusHistory: StatusHistoryProps\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"events\", \"date\", \"status\", \"statusHistory\"]);\n\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const statusHistory = isDesktop ? StatusHistoryProps : [status];\n  return __jsx(\"svg\", {\n    width: \"100%\",\n    height: \"100\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"rect\", {\n    x: \"8\",\n    y: \"69\",\n    width: \"99%\",\n    height: \"1\",\n    style: {\n      fill: \"#EBEBEB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), isDesktop && (events === null || events === void 0 ? void 0 : events.map(event => __jsx(React.Fragment, null, __jsx(PromiseEvent, _extends({\n    key: event.label\n  }, event, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }))))), statusHistory === null || statusHistory === void 0 ? void 0 : statusHistory.map((currentStatus, idx) => __jsx(PromiseStatus, _extends({\n    key: currentStatus.title,\n    isOdd: idx % 2 === 1\n  }, currentStatus, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), idx === 0 && __jsx(\"rect\", {\n    x: \"8\",\n    y: \"69\",\n    width: \"99%\",\n    height: \"1\",\n    style: {\n      fill: \"#EBEBEB\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }))), __jsx(Labels, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nPromiseTimeline.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  date: PropTypes.string,\n  status: PropTypes.shape({}),\n  statusHistory: PropTypes.arrayOf(PropTypes.shape({}))\n};\nPromiseTimeline.defaultProps = {\n  date: undefined,\n  events: [],\n  status: undefined,\n  statusHistory: undefined\n};\nexport default PromiseTimeline;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/index.js"],"names":["React","PropTypes","makeStyles","useTheme","useMediaQuery","Labels","PromiseEvent","PromiseStatus","useStyles","root","overflow","PromiseTimeline","events","date","status","statusHistory","StatusHistoryProps","props","classes","theme","isDesktop","breakpoints","up","fill","map","event","label","currentStatus","idx","title","propTypes","arrayOf","shape","string","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport Labels from \"./Labels\";\nimport PromiseEvent from \"./PromiseEvent\";\nimport PromiseStatus from \"./PromiseStatus\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflow: \"visible\",\n  },\n}));\n\nfunction PromiseTimeline({\n  events,\n  date,\n  status,\n  statusHistory: StatusHistoryProps,\n  ...props\n}) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const statusHistory = isDesktop ? StatusHistoryProps : [status];\n  return (\n    <svg width=\"100%\" height=\"100\" className={classes.root}>\n      <rect\n        x=\"8\"\n        y=\"69\"\n        width=\"99%\"\n        height=\"1\"\n        style={{\n          fill: \"#EBEBEB\",\n        }}\n      />\n      {isDesktop &&\n        events?.map((event) => (\n          <>\n            <PromiseEvent key={event.label} {...event} />\n          </>\n        ))}\n      {statusHistory?.map((currentStatus, idx) => (\n        <PromiseStatus\n          key={currentStatus.title}\n          isOdd={idx % 2 === 1}\n          {...currentStatus}\n        >\n          {idx === 0 && (\n            <rect\n              x=\"8\"\n              y=\"69\"\n              width=\"99%\"\n              height=\"1\"\n              style={{\n                fill: \"#EBEBEB\",\n              }}\n            />\n          )}\n        </PromiseStatus>\n      ))}\n      <Labels />\n    </svg>\n  );\n}\n\nPromiseTimeline.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({})),\n  date: PropTypes.string,\n  status: PropTypes.shape({}),\n  statusHistory: PropTypes.arrayOf(PropTypes.shape({})),\n};\nPromiseTimeline.defaultProps = {\n  date: undefined,\n  events: [],\n  status: undefined,\n  statusHistory: undefined,\n};\n\nexport default PromiseTimeline;\n"]},"metadata":{},"sourceType":"module"}