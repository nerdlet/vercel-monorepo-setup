{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/Labels.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport config from \"@/promisetracker/config\";\n\nconst Labels = () => {\n  const interval = config.promiseInterval;\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n  const firstLabel = __jsx(React.Fragment, null, __jsx(\"circle\", {\n    cx: \"8\",\n    cy: \"70\",\n    r: \"8\",\n    stroke: \"#F7F7F7\",\n    strokeWidth: \"1\",\n    fill: \"#202020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), __jsx(\"text\", {\n    x: \"0\",\n    y: \"86\",\n    dominantBaseline: \"hanging\",\n    stroke: \"#202020\",\n    strokeWidth: \".2\",\n    fontFamily: theme.typography.body2.fontFamily,\n    fontSize: theme.typography.body2.fontSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, interval[0]));\n\n  const lastLabel = __jsx(React.Fragment, null, __jsx(\"circle\", {\n    cx: \"100%\",\n    cy: \"70\",\n    r: \"8\",\n    stroke: \"#F7F7F7\",\n    strokeWidth: \"1\",\n    fill: \"#EBEBEB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), __jsx(\"text\", {\n    x: \"100%\",\n    y: \"86\",\n    dominantBaseline: \"hanging\",\n    stroke: \"#202020\",\n    strokeWidth: \".2\",\n    fontFamily: theme.typography.body2.fontFamily,\n    fontSize: theme.typography.body2.fontSize,\n    textAnchor: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, interval[1]));\n\n  let labels = [];\n\n  if (isDesktop) {\n    labels = Array(interval[1] - interval[0] - 1).fill().map((_, idx) => interval[0] + 1 + idx).map((year, i) => __jsx(React.Fragment, {\n      key: year,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"circle\", {\n      cx: `${(i + 1) * 100 / (interval[1] - interval[0])}%`,\n      cy: \"70\",\n      r: \"4\",\n      stroke: \"#F7F7F7\",\n      strokeWidth: \"1\",\n      fill: \"#202020\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), __jsx(\"text\", {\n      x: `${(i + 1) * 100 / (interval[1] - interval[0])}%`,\n      y: \"86\",\n      dominantBaseline: \"hanging\",\n      stroke: \"#202020\",\n      strokeWidth: \".2\",\n      fontFamily: theme.typography.body2.fontFamily,\n      fontSize: theme.typography.body2.fontSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, year)));\n  }\n\n  return __jsx(React.Fragment, null, firstLabel, labels, lastLabel);\n};\n\nexport default Labels;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/PromiseTimeline/Labels.js"],"names":["React","useTheme","useMediaQuery","config","Labels","interval","promiseInterval","theme","isDesktop","breakpoints","up","firstLabel","typography","body2","fontFamily","fontSize","lastLabel","labels","Array","fill","map","_","idx","year","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport config from \"@/promisetracker/config\";\n\nconst Labels = () => {\n  const interval = config.promiseInterval;\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n  const firstLabel = (\n    <>\n      <circle\n        cx=\"8\"\n        cy=\"70\"\n        r=\"8\"\n        stroke=\"#F7F7F7\"\n        strokeWidth=\"1\"\n        fill=\"#202020\"\n      />\n      <text\n        x=\"0\"\n        y=\"86\"\n        dominantBaseline=\"hanging\"\n        stroke=\"#202020\"\n        strokeWidth=\".2\"\n        fontFamily={theme.typography.body2.fontFamily}\n        fontSize={theme.typography.body2.fontSize}\n      >\n        {interval[0]}\n      </text>\n    </>\n  );\n  const lastLabel = (\n    <>\n      <circle\n        cx=\"100%\"\n        cy=\"70\"\n        r=\"8\"\n        stroke=\"#F7F7F7\"\n        strokeWidth=\"1\"\n        fill=\"#EBEBEB\"\n      />\n      <text\n        x=\"100%\"\n        y=\"86\"\n        dominantBaseline=\"hanging\"\n        stroke=\"#202020\"\n        strokeWidth=\".2\"\n        fontFamily={theme.typography.body2.fontFamily}\n        fontSize={theme.typography.body2.fontSize}\n        textAnchor=\"end\"\n      >\n        {interval[1]}\n      </text>\n    </>\n  );\n  let labels = [];\n  if (isDesktop) {\n    labels = Array(interval[1] - interval[0] - 1)\n      .fill()\n      .map((_, idx) => interval[0] + 1 + idx)\n      .map((year, i) => (\n        <React.Fragment key={year}>\n          <circle\n            cx={`${((i + 1) * 100) / (interval[1] - interval[0])}%`}\n            cy=\"70\"\n            r=\"4\"\n            stroke=\"#F7F7F7\"\n            strokeWidth=\"1\"\n            fill=\"#202020\"\n          />\n          <text\n            x={`${((i + 1) * 100) / (interval[1] - interval[0])}%`}\n            y=\"86\"\n            dominantBaseline=\"hanging\"\n            stroke=\"#202020\"\n            strokeWidth=\".2\"\n            fontFamily={theme.typography.body2.fontFamily}\n            fontSize={theme.typography.body2.fontSize}\n          >\n            {year}\n          </text>\n        </React.Fragment>\n      ));\n  }\n\n  return (\n    <>\n      {firstLabel}\n      {labels}\n      {lastLabel}\n    </>\n  );\n};\n\nexport default Labels;\n"]},"metadata":{},"sourceType":"module"}