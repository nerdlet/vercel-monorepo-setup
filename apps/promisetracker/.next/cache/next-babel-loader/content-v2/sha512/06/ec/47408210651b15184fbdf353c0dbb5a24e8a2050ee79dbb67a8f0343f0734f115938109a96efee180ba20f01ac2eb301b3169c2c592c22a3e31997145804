{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Navigation/Logo/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport logo from \"../../../assets/PT-logo-header-mob@2x.png\";\nimport desktoplogo from \"../../../assets/PT-logo-header-desktop@2x.png\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport IconButton from \"../../Link/IconButton\";\nconst useStyles = makeStyles(({\n  breakpoints,\n  typography\n}) => ({\n  logo: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\"\n    }\n  },\n  img: {\n    height: \"auto\",\n    maxWidth: typography.pxToRem(135),\n    minWidth: typography.pxToRem(135),\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(236),\n      minWidth: typography.pxToRem(236)\n    }\n  }\n}));\n\nfunction Logo(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const src = isDesktop ? desktoplogo : logo;\n  return __jsx(IconButton, {\n    disableRipple: true,\n    disableFocusRipple: true,\n    href: \"/\",\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: src,\n    alt: \"Promise Tracker\",\n    className: classes.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Logo;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promiseTracker/src/components/Navigation/Logo/index.js"],"names":["React","logo","desktoplogo","useMediaQuery","makeStyles","useTheme","IconButton","useStyles","breakpoints","typography","padding","backgroundColor","img","height","maxWidth","pxToRem","minWidth","up","Logo","props","classes","theme","isDesktop","src"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AACA,OAAOC,WAAP;AAEA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,UAAP;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,CAAC;AAAEI,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAD,MAAkC;AAC7DR,EAAAA,IAAI,EAAE;AACJS,IAAAA,OAAO,EAAE,CADL;AAEJ,eAAW;AACTC,MAAAA,eAAe,EAAE;AADR;AAFP,GADuD;AAO7DC,EAAAA,GAAG,EAAE;AACHC,IAAAA,MAAM,EAAE,MADL;AAEHC,IAAAA,QAAQ,EAAEL,UAAU,CAACM,OAAX,CAAmB,GAAnB,CAFP;AAGHC,IAAAA,QAAQ,EAAEP,UAAU,CAACM,OAAX,CAAmB,GAAnB,CAHP;AAIH,KAACP,WAAW,CAACS,EAAZ,CAAe,IAAf,CAAD,GAAwB;AACtBH,MAAAA,QAAQ,EAAEL,UAAU,CAACM,OAAX,CAAmB,GAAnB,CADY;AAEtBC,MAAAA,QAAQ,EAAEP,UAAU,CAACM,OAAX,CAAmB,GAAnB;AAFY;AAJrB;AAPwD,CAAlC,CAAD,CAA5B;;AAkBA,SAASG,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAMC,OAAO,GAAGb,SAAS,CAACY,KAAD,CAAzB;AACA,QAAME,KAAK,GAAGhB,QAAQ,EAAtB;AACA,QAAMiB,SAAS,GAAGnB,aAAa,CAACkB,KAAK,CAACb,WAAN,CAAkBS,EAAlB,CAAqB,IAArB,CAAD,CAA/B;AACA,QAAMM,GAAG,GAAGD,SAAS,GAAGpB,WAAH,GAAiBD,IAAtC;AAEA,SACE,MAAC,UAAD;AACE,IAAA,aAAa,MADf;AAEE,IAAA,kBAAkB,MAFpB;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,SAAS,EAAEmB,OAAO,CAACnB,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,GAAG,EAAEsB,GAAV;AAAe,IAAA,GAAG,EAAC,iBAAnB;AAAqC,IAAA,SAAS,EAAEH,OAAO,CAACR,GAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD;;AACD,eAAeM,IAAf","sourcesContent":["import React from \"react\";\n\nimport logo from \"@/promisetracker/assets/PT-logo-header-mob@2x.png\";\nimport desktoplogo from \"@/promisetracker/assets/PT-logo-header-desktop@2x.png\";\n\nimport { useMediaQuery } from \"@material-ui/core\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport IconButton from \"@/promisetracker/components/Link/IconButton\";\n\nconst useStyles = makeStyles(({ breakpoints, typography }) => ({\n  logo: {\n    padding: 0,\n    \"&:hover\": {\n      backgroundColor: \"inherit\",\n    },\n  },\n  img: {\n    height: \"auto\",\n    maxWidth: typography.pxToRem(135),\n    minWidth: typography.pxToRem(135),\n    [breakpoints.up(\"lg\")]: {\n      maxWidth: typography.pxToRem(236),\n      minWidth: typography.pxToRem(236),\n    },\n  },\n}));\n\nfunction Logo(props) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n  const src = isDesktop ? desktoplogo : logo;\n\n  return (\n    <IconButton\n      disableRipple\n      disableFocusRipple\n      href=\"/\"\n      className={classes.logo}\n    >\n      <img src={src} alt=\"Promise Tracker\" className={classes.img} />\n    </IconButton>\n  );\n}\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}