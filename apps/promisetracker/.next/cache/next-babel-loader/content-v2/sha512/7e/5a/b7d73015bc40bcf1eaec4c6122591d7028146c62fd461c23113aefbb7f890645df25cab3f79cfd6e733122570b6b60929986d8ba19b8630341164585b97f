{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/LatestPromises/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Link from \"@/promisetracker/components/Link\";\nimport { Section } from \"@commons-ui/core\";\nimport CtAButton from \"@/promisetracker/components/CtAButton\";\nimport PromiseCard from \"@/promisetracker/components/PromiseCard\";\nimport useStyles from \"./useStyles\";\n\nfunction LatestPromises(_ref) {\n  _s();\n\n  var _this = this;\n\n  var actionLabel = _ref.actionLabel,\n      items = _ref.items,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"actionLabel\", \"items\", \"title\"]);\n\n  var classes = useStyles(props);\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n  if (!(items !== null && items !== void 0 && items.length)) {\n    return null;\n  }\n\n  return __jsx(Section, {\n    title: title,\n    classes: {\n      root: classes.section,\n      title: classes.sectionTitle\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, items.map(function (promise, i) {\n    var _clsx;\n\n    return __jsx(Grid, {\n      key: promise.title,\n      item: true,\n      xs: 12,\n      lg: \"auto\",\n      className: clsx((_clsx = {}, _defineProperty(_clsx, classes.row, !isDesktop && i > 0 || i > 2), _defineProperty(_clsx, classes.gridItem, i % 3 === 1), _clsx)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(PromiseCard, _extends({}, promise, {\n      component: \"div\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })));\n  })), actionLabel && __jsx(Link, {\n    href: \"/promises\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(CtAButton, {\n    classes: {\n      root: classes.cta,\n      button: classes.ctaButton\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, actionLabel)));\n}\n\n_s(LatestPromises, \"Hu6wY2lD9RXVdiUkdVrs/git5qs=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = LatestPromises;\nLatestPromises.propTypes = {\n  actionLabel: PropTypes.string,\n  classes: PropTypes.shape({\n    card: PropTypes.string,\n    scrollBar: PropTypes.string,\n    section: PropTypes.string,\n    sectionTitle: PropTypes.string,\n    root: PropTypes.string\n  }),\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  title: PropTypes.string\n};\nLatestPromises.defaultProps = {\n  actionLabel: undefined,\n  classes: undefined,\n  items: undefined,\n  title: undefined\n};\nexport default LatestPromises;\n\nvar _c;\n\n$RefreshReg$(_c, \"LatestPromises\");","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/LatestPromises/index.js"],"names":["React","PropTypes","clsx","Grid","useMediaQuery","useTheme","Link","Section","CtAButton","PromiseCard","useStyles","LatestPromises","actionLabel","items","title","props","classes","theme","isDesktop","breakpoints","up","length","root","section","sectionTitle","map","promise","i","row","gridItem","link","cta","button","ctaButton","propTypes","string","shape","card","scrollBar","arrayOf","defaultProps","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\n\nimport { Grid, useMediaQuery } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport Link from \"@/promisetracker/components/Link\";\n\nimport { Section } from \"@commons-ui/core\";\n\nimport CtAButton from \"@/promisetracker/components/CtAButton\";\nimport PromiseCard from \"@/promisetracker/components/PromiseCard\";\n\nimport useStyles from \"./useStyles\";\n\nfunction LatestPromises({ actionLabel, items, title, ...props }) {\n  const classes = useStyles(props);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up(\"lg\"));\n\n  if (!items?.length) {\n    return null;\n  }\n  return (\n    <Section\n      title={title}\n      classes={{ root: classes.section, title: classes.sectionTitle }}\n    >\n      <Grid container justify=\"flex-start\">\n        {items.map((promise, i) => (\n          <Grid\n            key={promise.title}\n            item\n            xs={12}\n            lg=\"auto\"\n            className={clsx({\n              [classes.row]: (!isDesktop && i > 0) || i > 2,\n              [classes.gridItem]: i % 3 === 1,\n            })}\n          >\n            <PromiseCard {...promise} component=\"div\" />\n          </Grid>\n        ))}\n      </Grid>\n      {actionLabel && (\n        <Link href=\"/promises\" className={classes.link}>\n          <CtAButton classes={{ root: classes.cta, button: classes.ctaButton }}>\n            {actionLabel}\n          </CtAButton>\n        </Link>\n      )}\n    </Section>\n  );\n}\n\nLatestPromises.propTypes = {\n  actionLabel: PropTypes.string,\n  classes: PropTypes.shape({\n    card: PropTypes.string,\n    scrollBar: PropTypes.string,\n    section: PropTypes.string,\n    sectionTitle: PropTypes.string,\n    root: PropTypes.string,\n  }),\n  items: PropTypes.arrayOf(PropTypes.shape({})),\n  title: PropTypes.string,\n};\n\nLatestPromises.defaultProps = {\n  actionLabel: undefined,\n  classes: undefined,\n  items: undefined,\n  title: undefined,\n};\n\nexport default LatestPromises;\n"]},"metadata":{},"sourceType":"module"}