{"ast":null,"code":"var _jsxFileName = \"/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/Navigation/DesktopNavigation/PageNavigation.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Section } from \"@commons-ui/core\";\nimport LinkButton from \"@/promisetracker/components/Link/Button\";\nconst useStyles = makeStyles(({\n  palette,\n  typography\n}) => ({\n  section: {},\n  root: {\n    backgroundColor: palette.background.paper,\n    boxShadow: \"0px 8px 30px #0000001A\",\n    width: \"100%\"\n  },\n  button: {\n    width: \"auto\",\n    fontWeight: \"normal\",\n    color: \"#909090\",\n    fontFamily: typography.fontFamily,\n    padding: \"1rem\",\n    borderBottom: \"3px solid transparent\",\n    \"&:hover\": {\n      borderRadius: 0,\n      border: 0,\n      color: palette.primary.dark,\n      backgroundColor: \"unset\",\n      borderBottom: `3px solid ${palette.primary.main}`\n    }\n  },\n  navigation: {\n    padding: \"0rem 10rem\"\n  },\n  buttonCurrent: {\n    borderRadius: 0,\n    border: 0,\n    color: palette.primary.dark,\n    backgroundColor: \"unset\",\n    borderBottom: `3px solid ${palette.primary.main}`\n  }\n}));\n\nfunction PageNavigation(_ref) {\n  let {\n    navigation,\n    pathname,\n    asPath: asPathProp\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"navigation\", \"pathname\", \"asPath\"]);\n\n  const classes = useStyles(props);\n  const buttonRef = useRef(); // Remove query from asPath (if any)\n\n  const asPath = asPathProp && asPathProp.split(\"?\")[0];\n  const asPathParts = asPath && asPath.split(\"/\"); // Limit navigationUrl to subnav level only i.e. ignore article slug\n\n  const navigationUrl = asPathParts && asPathParts.length > 2 && asPathParts.slice(0, 3).join(\"/\");\n\n  if (!(navigation !== null && navigation !== void 0 && navigation.length)) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Section, {\n    classes: {\n      root: classes.section\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    className: classes.navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, navigation.map(menu => __jsx(Grid, {\n    item: true,\n    key: menu.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(LinkButton, {\n    disableFocusRipple: true,\n    disableRipple: true,\n    href: pathname || menu.href,\n    as: pathname ? menu.href : undefined,\n    size: \"large\",\n    ref: buttonRef,\n    className: clsx(classes.button, {\n      [classes.buttonCurrent]: menu.href.startsWith(navigationUrl)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, menu.name))))));\n}\n\nPageNavigation.propTypes = {\n  navigation: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    href: PropTypes.string.isRequired\n  })).isRequired,\n  asPath: PropTypes.string,\n  pathname: PropTypes.string\n};\nPageNavigation.defaultProps = {\n  pathname: undefined,\n  asPath: undefined\n};\nexport default PageNavigation;","map":{"version":3,"sources":["/Users/cfafrica/Desktop/vercel-monorepo-setup/apps/promisetracker/src/components/Navigation/DesktopNavigation/PageNavigation.js"],"names":["React","useRef","PropTypes","clsx","Grid","makeStyles","Section","LinkButton","useStyles","palette","typography","section","root","backgroundColor","background","paper","boxShadow","width","button","fontWeight","color","fontFamily","padding","borderBottom","borderRadius","border","primary","dark","main","navigation","buttonCurrent","PageNavigation","pathname","asPath","asPathProp","props","classes","buttonRef","split","asPathParts","navigationUrl","length","slice","join","map","menu","href","undefined","startsWith","name","propTypes","arrayOf","shape","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\n\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Section } from \"@commons-ui/core\";\n\nimport LinkButton from \"@/promisetracker/components/Link/Button\";\n\nconst useStyles = makeStyles(({ palette, typography }) => ({\n  section: {},\n  root: {\n    backgroundColor: palette.background.paper,\n    boxShadow: \"0px 8px 30px #0000001A\",\n    width: \"100%\",\n  },\n  button: {\n    width: \"auto\",\n    fontWeight: \"normal\",\n    color: \"#909090\",\n    fontFamily: typography.fontFamily,\n    padding: \"1rem\",\n    borderBottom: \"3px solid transparent\",\n    \"&:hover\": {\n      borderRadius: 0,\n      border: 0,\n      color: palette.primary.dark,\n      backgroundColor: \"unset\",\n      borderBottom: `3px solid ${palette.primary.main}`,\n    },\n  },\n  navigation: {\n    padding: \"0rem 10rem\",\n  },\n  buttonCurrent: {\n    borderRadius: 0,\n    border: 0,\n    color: palette.primary.dark,\n    backgroundColor: \"unset\",\n    borderBottom: `3px solid ${palette.primary.main}`,\n  },\n}));\n\nfunction PageNavigation({\n  navigation,\n  pathname,\n  asPath: asPathProp,\n  ...props\n}) {\n  const classes = useStyles(props);\n  const buttonRef = useRef();\n\n  // Remove query from asPath (if any)\n  const asPath = asPathProp && asPathProp.split(\"?\")[0];\n  const asPathParts = asPath && asPath.split(\"/\");\n  // Limit navigationUrl to subnav level only i.e. ignore article slug\n  const navigationUrl =\n    asPathParts && asPathParts.length > 2 && asPathParts.slice(0, 3).join(\"/\");\n\n  if (!navigation?.length) {\n    return null;\n  }\n  return (\n    <div className={classes.root}>\n      <Section classes={{ root: classes.section }}>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          className={classes.navigation}\n        >\n          {navigation.map((menu) => (\n            <Grid item key={menu.href}>\n              <LinkButton\n                disableFocusRipple\n                disableRipple\n                href={pathname || menu.href}\n                as={pathname ? menu.href : undefined}\n                size=\"large\"\n                ref={buttonRef}\n                className={clsx(classes.button, {\n                  [classes.buttonCurrent]: menu.href.startsWith(navigationUrl),\n                })}\n              >\n                {menu.name}\n              </LinkButton>\n            </Grid>\n          ))}\n        </Grid>\n      </Section>\n    </div>\n  );\n}\n\nPageNavigation.propTypes = {\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      href: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  asPath: PropTypes.string,\n  pathname: PropTypes.string,\n};\n\nPageNavigation.defaultProps = {\n  pathname: undefined,\n  asPath: undefined,\n};\n\nexport default PageNavigation;\n"]},"metadata":{},"sourceType":"module"}